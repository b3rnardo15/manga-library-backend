import { ApiBase } from './base';
import { GroupExtendedResponse, GroupList, GroupResponse } from '../../types/data-types/group';
export declare type SearchGroupOptions = Partial<{
    /**
     * @default 10
     */
    limit: number;
    offset: number;
    ids: string[];
    name: string;
}>;
export declare class GroupResolver extends ApiBase {
    getGroup(groupId: string, options?: {
        withRelationShips?: false;
    }): Promise<GroupResponse>;
    getGroup(groupId: string, options?: {
        withRelationShips?: true;
    }): Promise<GroupExtendedResponse>;
    static getGroup(groupId: string, options?: {
        /**
         * If true, will additionally fetch data in relationships. (user)
         */
        withRelationShips?: false;
    }): Promise<GroupResponse>;
    static getGroup(groupId: string, options?: {
        /**
         * If true, will additionally fetch data in relationships. (user)
         */
        withRelationShips?: true;
    }): Promise<GroupExtendedResponse>;
    search(options: SearchGroupOptions): Promise<GroupList>;
    static search(options: SearchGroupOptions): Promise<GroupList>;
}
