import { ApiBase } from './base';
import { Session } from '../../types/agent';
import { ApiResponse } from '../../types/response';
export declare type CheckTokenResponse = {
    ok: 'ok' | 'error';
    isAuthenticated: boolean;
    roles: string[];
    permissions: string[];
};
export declare class AuthResolver extends ApiBase {
    login(username: string, password: string): Promise<ApiResponse<{
        token: Session;
    }>>;
    static login(username: string, password: string): Promise<ApiResponse<{
        token: Session;
    }>>;
    logout(): Promise<ApiResponse<Record<string, never>>>;
    static logout(session: Session): Promise<ApiResponse<Record<string, never>>>;
    refresh(): Promise<ApiResponse<{
        token: Session;
        message: string;
    }>>;
    static refresh(session: Session): Promise<ApiResponse<{
        token: Session;
        message: string;
    }>>;
    static checkToken(session: Session): Promise<ApiResponse<CheckTokenResponse>>;
}
