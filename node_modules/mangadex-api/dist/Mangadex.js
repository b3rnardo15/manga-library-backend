"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Mangadex = void 0;
const Agent_1 = require("./Agent");
const api_1 = require("./api");
const account_1 = require("./api/account");
const auth_1 = require("./api/auth");
const chapter_1 = require("./api/chapter");
const group_1 = require("./api/group");
const manga_1 = require("./api/manga");
const user_1 = require("./api/user");
class Mangadex {
    constructor(options = {}) {
        this.options = Object.assign({}, Agent_1.DefaultOptions, options);
        this.agent = new Agent_1.Agent(this.options);
        const apiBaseOptions = {
            agent: this.agent,
            options: this.options
        };
        this.account = new account_1.AccountResolver(apiBaseOptions);
        this.auth = new auth_1.AuthResolver(apiBaseOptions);
        this.chapter = new chapter_1.ChapterResolver(apiBaseOptions);
        this.coverArt = new api_1.CoverArtResolver(apiBaseOptions);
        this.group = new group_1.GroupResolver(apiBaseOptions);
        this.manga = new manga_1.MangaResolver(apiBaseOptions);
        this.user = new user_1.UserResolver(apiBaseOptions);
    }
    async convertLegacyId(ids, type) {
        return Mangadex.convertLegacyId(ids, type);
    }
    static async convertLegacyId(ids, type) {
        const { data: mappingId } = await Agent_1.Agent.call('legacy/mapping', {
            method: 'POST'
        }, {
            type,
            ids
        });
        return mappingId;
    }
}
exports.Mangadex = Mangadex;
Mangadex.auth = auth_1.AuthResolver;
Mangadex.chapter = chapter_1.ChapterResolver;
Mangadex.coverArt = api_1.CoverArtResolver;
Mangadex.group = group_1.GroupResolver;
Mangadex.manga = manga_1.MangaResolver;
Mangadex.user = user_1.UserResolver;
